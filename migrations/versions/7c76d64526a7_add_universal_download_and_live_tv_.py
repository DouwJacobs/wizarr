"""Add universal download and live TV columns

Revision ID: 7c76d64526a7
Revises: 5805136a1d16
Create Date: 2025-07-14 14:53:51.083256

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7c76d64526a7'
down_revision = '5805136a1d16'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('invitation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('allow_downloads', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('allow_live_tv', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('emby_allow_downloads', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('emby_allow_live_tv', sa.Boolean(), nullable=True))

    with op.batch_alter_table('media_server', schema=None) as batch_op:
        batch_op.add_column(sa.Column('allow_downloads', sa.Boolean(), nullable=False, default=False))
        batch_op.add_column(sa.Column('allow_live_tv', sa.Boolean(), nullable=False, default=False))
        batch_op.add_column(sa.Column('allow_downloads_emby', sa.Boolean(), nullable=False, default=False))
        batch_op.add_column(sa.Column('allow_tv_emby', sa.Boolean(), nullable=False, default=False))

    # Migrate existing data to universal columns
    connection = op.get_bind()
    
    # For media_server table: copy legacy values to universal columns
    connection.execute(sa.text("""
        UPDATE media_server SET 
            allow_downloads = CASE 
                WHEN server_type = 'plex' THEN COALESCE(allow_downloads_plex, 0)
                WHEN server_type = 'jellyfin' THEN COALESCE(allow_downloads_jellyfin, 0)
                WHEN server_type = 'emby' THEN COALESCE(allow_downloads_emby, 0)
                ELSE 0
            END,
            allow_live_tv = CASE 
                WHEN server_type = 'plex' THEN COALESCE(allow_tv_plex, 0)
                WHEN server_type = 'jellyfin' THEN COALESCE(allow_tv_jellyfin, 0)
                WHEN server_type = 'emby' THEN COALESCE(allow_tv_emby, 0)
                ELSE 0
            END
    """))
    
    # For invitation table: copy legacy values to universal columns
    connection.execute(sa.text("""
        UPDATE invitation SET 
            allow_downloads = COALESCE(jellyfin_allow_downloads, emby_allow_downloads, 0),
            allow_live_tv = COALESCE(jellyfin_allow_live_tv, emby_allow_live_tv, 0)
    """))

    # Drop legacy server-specific columns from media_server table
    with op.batch_alter_table('media_server', schema=None) as batch_op:
        batch_op.drop_column('allow_downloads_plex')
        batch_op.drop_column('allow_tv_plex')
        batch_op.drop_column('allow_downloads_jellyfin')
        batch_op.drop_column('allow_tv_jellyfin')

    # Drop legacy server-specific columns from invitation table
    with op.batch_alter_table('invitation', schema=None) as batch_op:
        batch_op.drop_column('jellyfin_allow_downloads')
        batch_op.drop_column('jellyfin_allow_live_tv')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Recreate legacy server-specific columns in media_server table
    with op.batch_alter_table('media_server', schema=None) as batch_op:
        batch_op.add_column(sa.Column('allow_downloads_plex', sa.Boolean(), nullable=False, default=False))
        batch_op.add_column(sa.Column('allow_tv_plex', sa.Boolean(), nullable=False, default=False))
        batch_op.add_column(sa.Column('allow_downloads_jellyfin', sa.Boolean(), nullable=False, default=False))
        batch_op.add_column(sa.Column('allow_tv_jellyfin', sa.Boolean(), nullable=False, default=False))

    # Recreate legacy server-specific columns in invitation table
    with op.batch_alter_table('invitation', schema=None) as batch_op:
        batch_op.add_column(sa.Column('jellyfin_allow_downloads', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('jellyfin_allow_live_tv', sa.Boolean(), nullable=True))

    # Migrate data back to legacy columns
    connection = op.get_bind()
    
    # For media_server table: copy universal values back to legacy columns
    connection.execute(sa.text("""
        UPDATE media_server SET 
            allow_downloads_plex = CASE WHEN server_type = 'plex' THEN allow_downloads ELSE 0 END,
            allow_tv_plex = CASE WHEN server_type = 'plex' THEN allow_live_tv ELSE 0 END,
            allow_downloads_jellyfin = CASE WHEN server_type = 'jellyfin' THEN allow_downloads ELSE 0 END,
            allow_tv_jellyfin = CASE WHEN server_type = 'jellyfin' THEN allow_live_tv ELSE 0 END
    """))
    
    # For invitation table: copy universal values back to legacy columns
    connection.execute(sa.text("""
        UPDATE invitation SET 
            jellyfin_allow_downloads = allow_downloads,
            jellyfin_allow_live_tv = allow_live_tv
    """))

    # Drop universal columns from media_server table
    with op.batch_alter_table('media_server', schema=None) as batch_op:
        batch_op.drop_column('allow_tv_emby')
        batch_op.drop_column('allow_downloads_emby')
        batch_op.drop_column('allow_live_tv')
        batch_op.drop_column('allow_downloads')

    # Drop universal columns from invitation table
    with op.batch_alter_table('invitation', schema=None) as batch_op:
        batch_op.drop_column('emby_allow_live_tv')
        batch_op.drop_column('emby_allow_downloads')
        batch_op.drop_column('allow_live_tv')
        batch_op.drop_column('allow_downloads')

    # ### end Alembic commands ###
